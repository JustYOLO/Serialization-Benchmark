// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoData.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ProtoData_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ProtoData_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ProtoData_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ProtoData_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ProtoData_2eproto;
class ProtoData;
class ProtoDataDefaultTypeInternal;
extern ProtoDataDefaultTypeInternal _ProtoData_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::ProtoData* Arena::CreateMaybeMessage<::ProtoData>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class ProtoData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoData) */ {
 public:
  inline ProtoData() : ProtoData(nullptr) {};
  virtual ~ProtoData();

  ProtoData(const ProtoData& from);
  ProtoData(ProtoData&& from) noexcept
    : ProtoData() {
    *this = ::std::move(from);
  }

  inline ProtoData& operator=(const ProtoData& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoData& operator=(ProtoData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProtoData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProtoData* internal_default_instance() {
    return reinterpret_cast<const ProtoData*>(
               &_ProtoData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ProtoData& a, ProtoData& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtoData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProtoData* New() const final {
    return CreateMaybeMessage<ProtoData>(nullptr);
  }

  ProtoData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProtoData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProtoData& from);
  void MergeFrom(const ProtoData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoData";
  }
  protected:
  explicit ProtoData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ProtoData_2eproto);
    return ::descriptor_table_ProtoData_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kQieezdijFieldNumber = 1,
    kRbqjhkqqFieldNumber = 2,
    kTnxueiffFieldNumber = 3,
    kWfzxitxaFieldNumber = 4,
    kWjhiporpFieldNumber = 5,
    kBntuygoiFieldNumber = 6,
    kSmxkhuxzFieldNumber = 7,
    kJjomypitFieldNumber = 8,
  };
  // string qieezdij = 1;
  void clear_qieezdij();
  const std::string& qieezdij() const;
  void set_qieezdij(const std::string& value);
  void set_qieezdij(std::string&& value);
  void set_qieezdij(const char* value);
  void set_qieezdij(const char* value, size_t size);
  std::string* mutable_qieezdij();
  std::string* release_qieezdij();
  void set_allocated_qieezdij(std::string* qieezdij);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_qieezdij();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_qieezdij(
      std::string* qieezdij);
  private:
  const std::string& _internal_qieezdij() const;
  void _internal_set_qieezdij(const std::string& value);
  std::string* _internal_mutable_qieezdij();
  public:

  // string rbqjhkqq = 2;
  void clear_rbqjhkqq();
  const std::string& rbqjhkqq() const;
  void set_rbqjhkqq(const std::string& value);
  void set_rbqjhkqq(std::string&& value);
  void set_rbqjhkqq(const char* value);
  void set_rbqjhkqq(const char* value, size_t size);
  std::string* mutable_rbqjhkqq();
  std::string* release_rbqjhkqq();
  void set_allocated_rbqjhkqq(std::string* rbqjhkqq);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_rbqjhkqq();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_rbqjhkqq(
      std::string* rbqjhkqq);
  private:
  const std::string& _internal_rbqjhkqq() const;
  void _internal_set_rbqjhkqq(const std::string& value);
  std::string* _internal_mutable_rbqjhkqq();
  public:

  // string tnxueiff = 3;
  void clear_tnxueiff();
  const std::string& tnxueiff() const;
  void set_tnxueiff(const std::string& value);
  void set_tnxueiff(std::string&& value);
  void set_tnxueiff(const char* value);
  void set_tnxueiff(const char* value, size_t size);
  std::string* mutable_tnxueiff();
  std::string* release_tnxueiff();
  void set_allocated_tnxueiff(std::string* tnxueiff);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_tnxueiff();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_tnxueiff(
      std::string* tnxueiff);
  private:
  const std::string& _internal_tnxueiff() const;
  void _internal_set_tnxueiff(const std::string& value);
  std::string* _internal_mutable_tnxueiff();
  public:

  // string wfzxitxa = 4;
  void clear_wfzxitxa();
  const std::string& wfzxitxa() const;
  void set_wfzxitxa(const std::string& value);
  void set_wfzxitxa(std::string&& value);
  void set_wfzxitxa(const char* value);
  void set_wfzxitxa(const char* value, size_t size);
  std::string* mutable_wfzxitxa();
  std::string* release_wfzxitxa();
  void set_allocated_wfzxitxa(std::string* wfzxitxa);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_wfzxitxa();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_wfzxitxa(
      std::string* wfzxitxa);
  private:
  const std::string& _internal_wfzxitxa() const;
  void _internal_set_wfzxitxa(const std::string& value);
  std::string* _internal_mutable_wfzxitxa();
  public:

  // string wjhiporp = 5;
  void clear_wjhiporp();
  const std::string& wjhiporp() const;
  void set_wjhiporp(const std::string& value);
  void set_wjhiporp(std::string&& value);
  void set_wjhiporp(const char* value);
  void set_wjhiporp(const char* value, size_t size);
  std::string* mutable_wjhiporp();
  std::string* release_wjhiporp();
  void set_allocated_wjhiporp(std::string* wjhiporp);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_wjhiporp();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_wjhiporp(
      std::string* wjhiporp);
  private:
  const std::string& _internal_wjhiporp() const;
  void _internal_set_wjhiporp(const std::string& value);
  std::string* _internal_mutable_wjhiporp();
  public:

  // string bntuygoi = 6;
  void clear_bntuygoi();
  const std::string& bntuygoi() const;
  void set_bntuygoi(const std::string& value);
  void set_bntuygoi(std::string&& value);
  void set_bntuygoi(const char* value);
  void set_bntuygoi(const char* value, size_t size);
  std::string* mutable_bntuygoi();
  std::string* release_bntuygoi();
  void set_allocated_bntuygoi(std::string* bntuygoi);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_bntuygoi();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_bntuygoi(
      std::string* bntuygoi);
  private:
  const std::string& _internal_bntuygoi() const;
  void _internal_set_bntuygoi(const std::string& value);
  std::string* _internal_mutable_bntuygoi();
  public:

  // string smxkhuxz = 7;
  void clear_smxkhuxz();
  const std::string& smxkhuxz() const;
  void set_smxkhuxz(const std::string& value);
  void set_smxkhuxz(std::string&& value);
  void set_smxkhuxz(const char* value);
  void set_smxkhuxz(const char* value, size_t size);
  std::string* mutable_smxkhuxz();
  std::string* release_smxkhuxz();
  void set_allocated_smxkhuxz(std::string* smxkhuxz);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_smxkhuxz();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_smxkhuxz(
      std::string* smxkhuxz);
  private:
  const std::string& _internal_smxkhuxz() const;
  void _internal_set_smxkhuxz(const std::string& value);
  std::string* _internal_mutable_smxkhuxz();
  public:

  // string jjomypit = 8;
  void clear_jjomypit();
  const std::string& jjomypit() const;
  void set_jjomypit(const std::string& value);
  void set_jjomypit(std::string&& value);
  void set_jjomypit(const char* value);
  void set_jjomypit(const char* value, size_t size);
  std::string* mutable_jjomypit();
  std::string* release_jjomypit();
  void set_allocated_jjomypit(std::string* jjomypit);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_jjomypit();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_jjomypit(
      std::string* jjomypit);
  private:
  const std::string& _internal_jjomypit() const;
  void _internal_set_jjomypit(const std::string& value);
  std::string* _internal_mutable_jjomypit();
  public:

  // @@protoc_insertion_point(class_scope:ProtoData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr qieezdij_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr rbqjhkqq_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tnxueiff_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr wfzxitxa_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr wjhiporp_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr bntuygoi_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr smxkhuxz_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr jjomypit_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ProtoData_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProtoData

// string qieezdij = 1;
inline void ProtoData::clear_qieezdij() {
  qieezdij_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ProtoData::qieezdij() const {
  // @@protoc_insertion_point(field_get:ProtoData.qieezdij)
  return _internal_qieezdij();
}
inline void ProtoData::set_qieezdij(const std::string& value) {
  _internal_set_qieezdij(value);
  // @@protoc_insertion_point(field_set:ProtoData.qieezdij)
}
inline std::string* ProtoData::mutable_qieezdij() {
  // @@protoc_insertion_point(field_mutable:ProtoData.qieezdij)
  return _internal_mutable_qieezdij();
}
inline const std::string& ProtoData::_internal_qieezdij() const {
  return qieezdij_.Get();
}
inline void ProtoData::_internal_set_qieezdij(const std::string& value) {
  
  qieezdij_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ProtoData::set_qieezdij(std::string&& value) {
  
  qieezdij_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoData.qieezdij)
}
inline void ProtoData::set_qieezdij(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  qieezdij_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoData.qieezdij)
}
inline void ProtoData::set_qieezdij(const char* value,
    size_t size) {
  
  qieezdij_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoData.qieezdij)
}
inline std::string* ProtoData::_internal_mutable_qieezdij() {
  
  return qieezdij_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ProtoData::release_qieezdij() {
  // @@protoc_insertion_point(field_release:ProtoData.qieezdij)
  return qieezdij_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProtoData::set_allocated_qieezdij(std::string* qieezdij) {
  if (qieezdij != nullptr) {
    
  } else {
    
  }
  qieezdij_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), qieezdij,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoData.qieezdij)
}
inline std::string* ProtoData::unsafe_arena_release_qieezdij() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ProtoData.qieezdij)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return qieezdij_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ProtoData::unsafe_arena_set_allocated_qieezdij(
    std::string* qieezdij) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (qieezdij != nullptr) {
    
  } else {
    
  }
  qieezdij_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      qieezdij, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProtoData.qieezdij)
}

// string rbqjhkqq = 2;
inline void ProtoData::clear_rbqjhkqq() {
  rbqjhkqq_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ProtoData::rbqjhkqq() const {
  // @@protoc_insertion_point(field_get:ProtoData.rbqjhkqq)
  return _internal_rbqjhkqq();
}
inline void ProtoData::set_rbqjhkqq(const std::string& value) {
  _internal_set_rbqjhkqq(value);
  // @@protoc_insertion_point(field_set:ProtoData.rbqjhkqq)
}
inline std::string* ProtoData::mutable_rbqjhkqq() {
  // @@protoc_insertion_point(field_mutable:ProtoData.rbqjhkqq)
  return _internal_mutable_rbqjhkqq();
}
inline const std::string& ProtoData::_internal_rbqjhkqq() const {
  return rbqjhkqq_.Get();
}
inline void ProtoData::_internal_set_rbqjhkqq(const std::string& value) {
  
  rbqjhkqq_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ProtoData::set_rbqjhkqq(std::string&& value) {
  
  rbqjhkqq_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoData.rbqjhkqq)
}
inline void ProtoData::set_rbqjhkqq(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  rbqjhkqq_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoData.rbqjhkqq)
}
inline void ProtoData::set_rbqjhkqq(const char* value,
    size_t size) {
  
  rbqjhkqq_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoData.rbqjhkqq)
}
inline std::string* ProtoData::_internal_mutable_rbqjhkqq() {
  
  return rbqjhkqq_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ProtoData::release_rbqjhkqq() {
  // @@protoc_insertion_point(field_release:ProtoData.rbqjhkqq)
  return rbqjhkqq_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProtoData::set_allocated_rbqjhkqq(std::string* rbqjhkqq) {
  if (rbqjhkqq != nullptr) {
    
  } else {
    
  }
  rbqjhkqq_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), rbqjhkqq,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoData.rbqjhkqq)
}
inline std::string* ProtoData::unsafe_arena_release_rbqjhkqq() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ProtoData.rbqjhkqq)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return rbqjhkqq_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ProtoData::unsafe_arena_set_allocated_rbqjhkqq(
    std::string* rbqjhkqq) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (rbqjhkqq != nullptr) {
    
  } else {
    
  }
  rbqjhkqq_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      rbqjhkqq, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProtoData.rbqjhkqq)
}

// string tnxueiff = 3;
inline void ProtoData::clear_tnxueiff() {
  tnxueiff_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ProtoData::tnxueiff() const {
  // @@protoc_insertion_point(field_get:ProtoData.tnxueiff)
  return _internal_tnxueiff();
}
inline void ProtoData::set_tnxueiff(const std::string& value) {
  _internal_set_tnxueiff(value);
  // @@protoc_insertion_point(field_set:ProtoData.tnxueiff)
}
inline std::string* ProtoData::mutable_tnxueiff() {
  // @@protoc_insertion_point(field_mutable:ProtoData.tnxueiff)
  return _internal_mutable_tnxueiff();
}
inline const std::string& ProtoData::_internal_tnxueiff() const {
  return tnxueiff_.Get();
}
inline void ProtoData::_internal_set_tnxueiff(const std::string& value) {
  
  tnxueiff_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ProtoData::set_tnxueiff(std::string&& value) {
  
  tnxueiff_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoData.tnxueiff)
}
inline void ProtoData::set_tnxueiff(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  tnxueiff_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoData.tnxueiff)
}
inline void ProtoData::set_tnxueiff(const char* value,
    size_t size) {
  
  tnxueiff_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoData.tnxueiff)
}
inline std::string* ProtoData::_internal_mutable_tnxueiff() {
  
  return tnxueiff_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ProtoData::release_tnxueiff() {
  // @@protoc_insertion_point(field_release:ProtoData.tnxueiff)
  return tnxueiff_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProtoData::set_allocated_tnxueiff(std::string* tnxueiff) {
  if (tnxueiff != nullptr) {
    
  } else {
    
  }
  tnxueiff_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tnxueiff,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoData.tnxueiff)
}
inline std::string* ProtoData::unsafe_arena_release_tnxueiff() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ProtoData.tnxueiff)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return tnxueiff_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ProtoData::unsafe_arena_set_allocated_tnxueiff(
    std::string* tnxueiff) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (tnxueiff != nullptr) {
    
  } else {
    
  }
  tnxueiff_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      tnxueiff, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProtoData.tnxueiff)
}

// string wfzxitxa = 4;
inline void ProtoData::clear_wfzxitxa() {
  wfzxitxa_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ProtoData::wfzxitxa() const {
  // @@protoc_insertion_point(field_get:ProtoData.wfzxitxa)
  return _internal_wfzxitxa();
}
inline void ProtoData::set_wfzxitxa(const std::string& value) {
  _internal_set_wfzxitxa(value);
  // @@protoc_insertion_point(field_set:ProtoData.wfzxitxa)
}
inline std::string* ProtoData::mutable_wfzxitxa() {
  // @@protoc_insertion_point(field_mutable:ProtoData.wfzxitxa)
  return _internal_mutable_wfzxitxa();
}
inline const std::string& ProtoData::_internal_wfzxitxa() const {
  return wfzxitxa_.Get();
}
inline void ProtoData::_internal_set_wfzxitxa(const std::string& value) {
  
  wfzxitxa_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ProtoData::set_wfzxitxa(std::string&& value) {
  
  wfzxitxa_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoData.wfzxitxa)
}
inline void ProtoData::set_wfzxitxa(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  wfzxitxa_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoData.wfzxitxa)
}
inline void ProtoData::set_wfzxitxa(const char* value,
    size_t size) {
  
  wfzxitxa_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoData.wfzxitxa)
}
inline std::string* ProtoData::_internal_mutable_wfzxitxa() {
  
  return wfzxitxa_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ProtoData::release_wfzxitxa() {
  // @@protoc_insertion_point(field_release:ProtoData.wfzxitxa)
  return wfzxitxa_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProtoData::set_allocated_wfzxitxa(std::string* wfzxitxa) {
  if (wfzxitxa != nullptr) {
    
  } else {
    
  }
  wfzxitxa_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), wfzxitxa,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoData.wfzxitxa)
}
inline std::string* ProtoData::unsafe_arena_release_wfzxitxa() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ProtoData.wfzxitxa)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return wfzxitxa_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ProtoData::unsafe_arena_set_allocated_wfzxitxa(
    std::string* wfzxitxa) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (wfzxitxa != nullptr) {
    
  } else {
    
  }
  wfzxitxa_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      wfzxitxa, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProtoData.wfzxitxa)
}

// string wjhiporp = 5;
inline void ProtoData::clear_wjhiporp() {
  wjhiporp_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ProtoData::wjhiporp() const {
  // @@protoc_insertion_point(field_get:ProtoData.wjhiporp)
  return _internal_wjhiporp();
}
inline void ProtoData::set_wjhiporp(const std::string& value) {
  _internal_set_wjhiporp(value);
  // @@protoc_insertion_point(field_set:ProtoData.wjhiporp)
}
inline std::string* ProtoData::mutable_wjhiporp() {
  // @@protoc_insertion_point(field_mutable:ProtoData.wjhiporp)
  return _internal_mutable_wjhiporp();
}
inline const std::string& ProtoData::_internal_wjhiporp() const {
  return wjhiporp_.Get();
}
inline void ProtoData::_internal_set_wjhiporp(const std::string& value) {
  
  wjhiporp_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ProtoData::set_wjhiporp(std::string&& value) {
  
  wjhiporp_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoData.wjhiporp)
}
inline void ProtoData::set_wjhiporp(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  wjhiporp_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoData.wjhiporp)
}
inline void ProtoData::set_wjhiporp(const char* value,
    size_t size) {
  
  wjhiporp_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoData.wjhiporp)
}
inline std::string* ProtoData::_internal_mutable_wjhiporp() {
  
  return wjhiporp_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ProtoData::release_wjhiporp() {
  // @@protoc_insertion_point(field_release:ProtoData.wjhiporp)
  return wjhiporp_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProtoData::set_allocated_wjhiporp(std::string* wjhiporp) {
  if (wjhiporp != nullptr) {
    
  } else {
    
  }
  wjhiporp_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), wjhiporp,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoData.wjhiporp)
}
inline std::string* ProtoData::unsafe_arena_release_wjhiporp() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ProtoData.wjhiporp)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return wjhiporp_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ProtoData::unsafe_arena_set_allocated_wjhiporp(
    std::string* wjhiporp) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (wjhiporp != nullptr) {
    
  } else {
    
  }
  wjhiporp_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      wjhiporp, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProtoData.wjhiporp)
}

// string bntuygoi = 6;
inline void ProtoData::clear_bntuygoi() {
  bntuygoi_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ProtoData::bntuygoi() const {
  // @@protoc_insertion_point(field_get:ProtoData.bntuygoi)
  return _internal_bntuygoi();
}
inline void ProtoData::set_bntuygoi(const std::string& value) {
  _internal_set_bntuygoi(value);
  // @@protoc_insertion_point(field_set:ProtoData.bntuygoi)
}
inline std::string* ProtoData::mutable_bntuygoi() {
  // @@protoc_insertion_point(field_mutable:ProtoData.bntuygoi)
  return _internal_mutable_bntuygoi();
}
inline const std::string& ProtoData::_internal_bntuygoi() const {
  return bntuygoi_.Get();
}
inline void ProtoData::_internal_set_bntuygoi(const std::string& value) {
  
  bntuygoi_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ProtoData::set_bntuygoi(std::string&& value) {
  
  bntuygoi_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoData.bntuygoi)
}
inline void ProtoData::set_bntuygoi(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  bntuygoi_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoData.bntuygoi)
}
inline void ProtoData::set_bntuygoi(const char* value,
    size_t size) {
  
  bntuygoi_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoData.bntuygoi)
}
inline std::string* ProtoData::_internal_mutable_bntuygoi() {
  
  return bntuygoi_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ProtoData::release_bntuygoi() {
  // @@protoc_insertion_point(field_release:ProtoData.bntuygoi)
  return bntuygoi_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProtoData::set_allocated_bntuygoi(std::string* bntuygoi) {
  if (bntuygoi != nullptr) {
    
  } else {
    
  }
  bntuygoi_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), bntuygoi,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoData.bntuygoi)
}
inline std::string* ProtoData::unsafe_arena_release_bntuygoi() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ProtoData.bntuygoi)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return bntuygoi_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ProtoData::unsafe_arena_set_allocated_bntuygoi(
    std::string* bntuygoi) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (bntuygoi != nullptr) {
    
  } else {
    
  }
  bntuygoi_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      bntuygoi, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProtoData.bntuygoi)
}

// string smxkhuxz = 7;
inline void ProtoData::clear_smxkhuxz() {
  smxkhuxz_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ProtoData::smxkhuxz() const {
  // @@protoc_insertion_point(field_get:ProtoData.smxkhuxz)
  return _internal_smxkhuxz();
}
inline void ProtoData::set_smxkhuxz(const std::string& value) {
  _internal_set_smxkhuxz(value);
  // @@protoc_insertion_point(field_set:ProtoData.smxkhuxz)
}
inline std::string* ProtoData::mutable_smxkhuxz() {
  // @@protoc_insertion_point(field_mutable:ProtoData.smxkhuxz)
  return _internal_mutable_smxkhuxz();
}
inline const std::string& ProtoData::_internal_smxkhuxz() const {
  return smxkhuxz_.Get();
}
inline void ProtoData::_internal_set_smxkhuxz(const std::string& value) {
  
  smxkhuxz_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ProtoData::set_smxkhuxz(std::string&& value) {
  
  smxkhuxz_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoData.smxkhuxz)
}
inline void ProtoData::set_smxkhuxz(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  smxkhuxz_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoData.smxkhuxz)
}
inline void ProtoData::set_smxkhuxz(const char* value,
    size_t size) {
  
  smxkhuxz_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoData.smxkhuxz)
}
inline std::string* ProtoData::_internal_mutable_smxkhuxz() {
  
  return smxkhuxz_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ProtoData::release_smxkhuxz() {
  // @@protoc_insertion_point(field_release:ProtoData.smxkhuxz)
  return smxkhuxz_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProtoData::set_allocated_smxkhuxz(std::string* smxkhuxz) {
  if (smxkhuxz != nullptr) {
    
  } else {
    
  }
  smxkhuxz_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), smxkhuxz,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoData.smxkhuxz)
}
inline std::string* ProtoData::unsafe_arena_release_smxkhuxz() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ProtoData.smxkhuxz)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return smxkhuxz_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ProtoData::unsafe_arena_set_allocated_smxkhuxz(
    std::string* smxkhuxz) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (smxkhuxz != nullptr) {
    
  } else {
    
  }
  smxkhuxz_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      smxkhuxz, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProtoData.smxkhuxz)
}

// string jjomypit = 8;
inline void ProtoData::clear_jjomypit() {
  jjomypit_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ProtoData::jjomypit() const {
  // @@protoc_insertion_point(field_get:ProtoData.jjomypit)
  return _internal_jjomypit();
}
inline void ProtoData::set_jjomypit(const std::string& value) {
  _internal_set_jjomypit(value);
  // @@protoc_insertion_point(field_set:ProtoData.jjomypit)
}
inline std::string* ProtoData::mutable_jjomypit() {
  // @@protoc_insertion_point(field_mutable:ProtoData.jjomypit)
  return _internal_mutable_jjomypit();
}
inline const std::string& ProtoData::_internal_jjomypit() const {
  return jjomypit_.Get();
}
inline void ProtoData::_internal_set_jjomypit(const std::string& value) {
  
  jjomypit_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ProtoData::set_jjomypit(std::string&& value) {
  
  jjomypit_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoData.jjomypit)
}
inline void ProtoData::set_jjomypit(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  jjomypit_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoData.jjomypit)
}
inline void ProtoData::set_jjomypit(const char* value,
    size_t size) {
  
  jjomypit_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoData.jjomypit)
}
inline std::string* ProtoData::_internal_mutable_jjomypit() {
  
  return jjomypit_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ProtoData::release_jjomypit() {
  // @@protoc_insertion_point(field_release:ProtoData.jjomypit)
  return jjomypit_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProtoData::set_allocated_jjomypit(std::string* jjomypit) {
  if (jjomypit != nullptr) {
    
  } else {
    
  }
  jjomypit_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), jjomypit,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoData.jjomypit)
}
inline std::string* ProtoData::unsafe_arena_release_jjomypit() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ProtoData.jjomypit)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return jjomypit_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ProtoData::unsafe_arena_set_allocated_jjomypit(
    std::string* jjomypit) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (jjomypit != nullptr) {
    
  } else {
    
  }
  jjomypit_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      jjomypit, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProtoData.jjomypit)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ProtoData_2eproto
