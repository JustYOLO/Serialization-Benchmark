/**
 * Autogenerated by Thrift Compiler (0.20.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef struct_TYPES_H
#define struct_TYPES_H

#include <iosfwd>

#include <thrift/Thrift.h>
#include <thrift/TApplicationException.h>
#include <thrift/TBase.h>
#include <thrift/protocol/TProtocol.h>
#include <thrift/transport/TTransport.h>

#include <functional>
#include <memory>




class TStruct;

typedef struct _TStruct__isset {
  _TStruct__isset() : uztrathh(false), xlcdrebd(false), svblwglq(false), gkesoazh(false), gdnajler(false), yzjgzcpl(false), ucfkmhfi(false), hcfkimtf(false) {}
  bool uztrathh :1;
  bool xlcdrebd :1;
  bool svblwglq :1;
  bool gkesoazh :1;
  bool gdnajler :1;
  bool yzjgzcpl :1;
  bool ucfkmhfi :1;
  bool hcfkimtf :1;
} _TStruct__isset;

class TStruct : public virtual ::apache::thrift::TBase {
 public:

  TStruct(const TStruct&);
  TStruct& operator=(const TStruct&);
  TStruct() noexcept
          : uztrathh(),
            xlcdrebd(),
            svblwglq(),
            gkesoazh(),
            gdnajler(),
            yzjgzcpl(),
            ucfkmhfi(),
            hcfkimtf() {
  }

  virtual ~TStruct() noexcept;
  std::string uztrathh;
  std::string xlcdrebd;
  std::string svblwglq;
  std::string gkesoazh;
  std::string gdnajler;
  std::string yzjgzcpl;
  std::string ucfkmhfi;
  std::string hcfkimtf;

  _TStruct__isset __isset;

  void __set_uztrathh(const std::string& val);

  void __set_xlcdrebd(const std::string& val);

  void __set_svblwglq(const std::string& val);

  void __set_gkesoazh(const std::string& val);

  void __set_gdnajler(const std::string& val);

  void __set_yzjgzcpl(const std::string& val);

  void __set_ucfkmhfi(const std::string& val);

  void __set_hcfkimtf(const std::string& val);

  bool operator == (const TStruct & rhs) const
  {
    if (!(uztrathh == rhs.uztrathh))
      return false;
    if (!(xlcdrebd == rhs.xlcdrebd))
      return false;
    if (!(svblwglq == rhs.svblwglq))
      return false;
    if (!(gkesoazh == rhs.gkesoazh))
      return false;
    if (!(gdnajler == rhs.gdnajler))
      return false;
    if (!(yzjgzcpl == rhs.yzjgzcpl))
      return false;
    if (!(ucfkmhfi == rhs.ucfkmhfi))
      return false;
    if (!(hcfkimtf == rhs.hcfkimtf))
      return false;
    return true;
  }
  bool operator != (const TStruct &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TStruct & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot) override;
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const override;

  virtual void printTo(std::ostream& out) const;
};

void swap(TStruct &a, TStruct &b);

std::ostream& operator<<(std::ostream& out, const TStruct& obj);



#endif
