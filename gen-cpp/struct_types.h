/**
 * Autogenerated by Thrift Compiler (0.20.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef struct_TYPES_H
#define struct_TYPES_H

#include <iosfwd>

#include <thrift/Thrift.h>
#include <thrift/TApplicationException.h>
#include <thrift/TBase.h>
#include <thrift/protocol/TProtocol.h>
#include <thrift/transport/TTransport.h>

#include <functional>
#include <memory>




class TStruct;

typedef struct _TStruct__isset {
  _TStruct__isset() : nscpwcmu(false), nwvrdaek(false), fuzvztzr(false), uykpiqcm(false), ygxdpvnv(false), muzxzgja(false), sweazing(false), sutsmvdd(false) {}
  bool nscpwcmu :1;
  bool nwvrdaek :1;
  bool fuzvztzr :1;
  bool uykpiqcm :1;
  bool ygxdpvnv :1;
  bool muzxzgja :1;
  bool sweazing :1;
  bool sutsmvdd :1;
} _TStruct__isset;

class TStruct : public virtual ::apache::thrift::TBase {
 public:

  TStruct(const TStruct&);
  TStruct& operator=(const TStruct&);
  TStruct() noexcept
          : nscpwcmu(),
            nwvrdaek(),
            fuzvztzr(),
            uykpiqcm(),
            ygxdpvnv(),
            muzxzgja(),
            sweazing(),
            sutsmvdd() {
  }

  virtual ~TStruct() noexcept;
  std::string nscpwcmu;
  std::string nwvrdaek;
  std::string fuzvztzr;
  std::string uykpiqcm;
  std::string ygxdpvnv;
  std::string muzxzgja;
  std::string sweazing;
  std::string sutsmvdd;

  _TStruct__isset __isset;

  void __set_nscpwcmu(const std::string& val);

  void __set_nwvrdaek(const std::string& val);

  void __set_fuzvztzr(const std::string& val);

  void __set_uykpiqcm(const std::string& val);

  void __set_ygxdpvnv(const std::string& val);

  void __set_muzxzgja(const std::string& val);

  void __set_sweazing(const std::string& val);

  void __set_sutsmvdd(const std::string& val);

  bool operator == (const TStruct & rhs) const
  {
    if (!(nscpwcmu == rhs.nscpwcmu))
      return false;
    if (!(nwvrdaek == rhs.nwvrdaek))
      return false;
    if (!(fuzvztzr == rhs.fuzvztzr))
      return false;
    if (!(uykpiqcm == rhs.uykpiqcm))
      return false;
    if (!(ygxdpvnv == rhs.ygxdpvnv))
      return false;
    if (!(muzxzgja == rhs.muzxzgja))
      return false;
    if (!(sweazing == rhs.sweazing))
      return false;
    if (!(sutsmvdd == rhs.sutsmvdd))
      return false;
    return true;
  }
  bool operator != (const TStruct &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const TStruct & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot) override;
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const override;

  virtual void printTo(std::ostream& out) const;
};

void swap(TStruct &a, TStruct &b);

std::ostream& operator<<(std::ostream& out, const TStruct& obj);



#endif
