// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: testData.proto

#include "testData.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
class testDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<testData> _instance;
} _testData_default_instance_;
static void InitDefaultsscc_info_testData_testData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_testData_default_instance_;
    new (ptr) ::testData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::testData::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_testData_testData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_testData_testData_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_testData_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_testData_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_testData_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_testData_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::testData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::testData, sminkxeg_),
  PROTOBUF_FIELD_OFFSET(::testData, chdaivjp_),
  PROTOBUF_FIELD_OFFSET(::testData, ysrgltuw_),
  PROTOBUF_FIELD_OFFSET(::testData, jglkccsy_),
  PROTOBUF_FIELD_OFFSET(::testData, uohytpvk_),
  PROTOBUF_FIELD_OFFSET(::testData, jfwyudrr_),
  PROTOBUF_FIELD_OFFSET(::testData, ejcyrnct_),
  PROTOBUF_FIELD_OFFSET(::testData, tgjuqnum_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::testData)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_testData_default_instance_),
};

const char descriptor_table_protodef_testData_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016testData.proto\"\232\001\n\010testData\022\020\n\010sMiNkXE"
  "G\030\001 \001(\t\022\020\n\010ChDAIVjp\030\002 \001(\t\022\020\n\010YsRgltuW\030\003 "
  "\001(\t\022\020\n\010jGlKcCSY\030\004 \001(\t\022\020\n\010uOHYtpvK\030\005 \001(\t\022"
  "\020\n\010jfwYuDrR\030\006 \001(\t\022\020\n\010eJCYRNCt\030\007 \001(\t\022\020\n\010t"
  "GjuQNUm\030\010 \001(\tb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_testData_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_testData_2eproto_sccs[1] = {
  &scc_info_testData_testData_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_testData_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_testData_2eproto = {
  false, false, descriptor_table_protodef_testData_2eproto, "testData.proto", 181,
  &descriptor_table_testData_2eproto_once, descriptor_table_testData_2eproto_sccs, descriptor_table_testData_2eproto_deps, 1, 0,
  schemas, file_default_instances, TableStruct_testData_2eproto::offsets,
  file_level_metadata_testData_2eproto, 1, file_level_enum_descriptors_testData_2eproto, file_level_service_descriptors_testData_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_testData_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_testData_2eproto)), true);

// ===================================================================

void testData::InitAsDefaultInstance() {
}
class testData::_Internal {
 public:
};

testData::testData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:testData)
}
testData::testData(const testData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sminkxeg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sminkxeg().empty()) {
    sminkxeg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_sminkxeg(),
      GetArena());
  }
  chdaivjp_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_chdaivjp().empty()) {
    chdaivjp_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_chdaivjp(),
      GetArena());
  }
  ysrgltuw_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ysrgltuw().empty()) {
    ysrgltuw_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ysrgltuw(),
      GetArena());
  }
  jglkccsy_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_jglkccsy().empty()) {
    jglkccsy_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_jglkccsy(),
      GetArena());
  }
  uohytpvk_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uohytpvk().empty()) {
    uohytpvk_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_uohytpvk(),
      GetArena());
  }
  jfwyudrr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_jfwyudrr().empty()) {
    jfwyudrr_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_jfwyudrr(),
      GetArena());
  }
  ejcyrnct_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ejcyrnct().empty()) {
    ejcyrnct_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ejcyrnct(),
      GetArena());
  }
  tgjuqnum_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tgjuqnum().empty()) {
    tgjuqnum_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_tgjuqnum(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:testData)
}

void testData::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_testData_testData_2eproto.base);
  sminkxeg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  chdaivjp_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ysrgltuw_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  jglkccsy_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uohytpvk_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  jfwyudrr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ejcyrnct_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tgjuqnum_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

testData::~testData() {
  // @@protoc_insertion_point(destructor:testData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void testData::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  sminkxeg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  chdaivjp_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ysrgltuw_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  jglkccsy_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uohytpvk_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  jfwyudrr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ejcyrnct_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tgjuqnum_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void testData::ArenaDtor(void* object) {
  testData* _this = reinterpret_cast< testData* >(object);
  (void)_this;
}
void testData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void testData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const testData& testData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_testData_testData_2eproto.base);
  return *internal_default_instance();
}


void testData::Clear() {
// @@protoc_insertion_point(message_clear_start:testData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sminkxeg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  chdaivjp_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ysrgltuw_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  jglkccsy_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  uohytpvk_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  jfwyudrr_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ejcyrnct_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  tgjuqnum_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* testData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string sMiNkXEG = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_sminkxeg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "testData.sMiNkXEG"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ChDAIVjp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_chdaivjp();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "testData.ChDAIVjp"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string YsRgltuW = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_ysrgltuw();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "testData.YsRgltuW"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string jGlKcCSY = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_jglkccsy();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "testData.jGlKcCSY"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string uOHYtpvK = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_uohytpvk();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "testData.uOHYtpvK"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string jfwYuDrR = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_jfwyudrr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "testData.jfwYuDrR"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string eJCYRNCt = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_ejcyrnct();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "testData.eJCYRNCt"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string tGjuQNUm = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_tgjuqnum();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "testData.tGjuQNUm"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* testData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:testData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sMiNkXEG = 1;
  if (this->sminkxeg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sminkxeg().data(), static_cast<int>(this->_internal_sminkxeg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "testData.sMiNkXEG");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_sminkxeg(), target);
  }

  // string ChDAIVjp = 2;
  if (this->chdaivjp().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_chdaivjp().data(), static_cast<int>(this->_internal_chdaivjp().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "testData.ChDAIVjp");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_chdaivjp(), target);
  }

  // string YsRgltuW = 3;
  if (this->ysrgltuw().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ysrgltuw().data(), static_cast<int>(this->_internal_ysrgltuw().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "testData.YsRgltuW");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_ysrgltuw(), target);
  }

  // string jGlKcCSY = 4;
  if (this->jglkccsy().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_jglkccsy().data(), static_cast<int>(this->_internal_jglkccsy().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "testData.jGlKcCSY");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_jglkccsy(), target);
  }

  // string uOHYtpvK = 5;
  if (this->uohytpvk().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uohytpvk().data(), static_cast<int>(this->_internal_uohytpvk().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "testData.uOHYtpvK");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_uohytpvk(), target);
  }

  // string jfwYuDrR = 6;
  if (this->jfwyudrr().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_jfwyudrr().data(), static_cast<int>(this->_internal_jfwyudrr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "testData.jfwYuDrR");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_jfwyudrr(), target);
  }

  // string eJCYRNCt = 7;
  if (this->ejcyrnct().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ejcyrnct().data(), static_cast<int>(this->_internal_ejcyrnct().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "testData.eJCYRNCt");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_ejcyrnct(), target);
  }

  // string tGjuQNUm = 8;
  if (this->tgjuqnum().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tgjuqnum().data(), static_cast<int>(this->_internal_tgjuqnum().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "testData.tGjuQNUm");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_tgjuqnum(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:testData)
  return target;
}

size_t testData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:testData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sMiNkXEG = 1;
  if (this->sminkxeg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sminkxeg());
  }

  // string ChDAIVjp = 2;
  if (this->chdaivjp().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_chdaivjp());
  }

  // string YsRgltuW = 3;
  if (this->ysrgltuw().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ysrgltuw());
  }

  // string jGlKcCSY = 4;
  if (this->jglkccsy().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_jglkccsy());
  }

  // string uOHYtpvK = 5;
  if (this->uohytpvk().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uohytpvk());
  }

  // string jfwYuDrR = 6;
  if (this->jfwyudrr().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_jfwyudrr());
  }

  // string eJCYRNCt = 7;
  if (this->ejcyrnct().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ejcyrnct());
  }

  // string tGjuQNUm = 8;
  if (this->tgjuqnum().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tgjuqnum());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void testData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:testData)
  GOOGLE_DCHECK_NE(&from, this);
  const testData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<testData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:testData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:testData)
    MergeFrom(*source);
  }
}

void testData::MergeFrom(const testData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:testData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sminkxeg().size() > 0) {
    _internal_set_sminkxeg(from._internal_sminkxeg());
  }
  if (from.chdaivjp().size() > 0) {
    _internal_set_chdaivjp(from._internal_chdaivjp());
  }
  if (from.ysrgltuw().size() > 0) {
    _internal_set_ysrgltuw(from._internal_ysrgltuw());
  }
  if (from.jglkccsy().size() > 0) {
    _internal_set_jglkccsy(from._internal_jglkccsy());
  }
  if (from.uohytpvk().size() > 0) {
    _internal_set_uohytpvk(from._internal_uohytpvk());
  }
  if (from.jfwyudrr().size() > 0) {
    _internal_set_jfwyudrr(from._internal_jfwyudrr());
  }
  if (from.ejcyrnct().size() > 0) {
    _internal_set_ejcyrnct(from._internal_ejcyrnct());
  }
  if (from.tgjuqnum().size() > 0) {
    _internal_set_tgjuqnum(from._internal_tgjuqnum());
  }
}

void testData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:testData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void testData::CopyFrom(const testData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:testData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool testData::IsInitialized() const {
  return true;
}

void testData::InternalSwap(testData* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  sminkxeg_.Swap(&other->sminkxeg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  chdaivjp_.Swap(&other->chdaivjp_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ysrgltuw_.Swap(&other->ysrgltuw_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  jglkccsy_.Swap(&other->jglkccsy_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  uohytpvk_.Swap(&other->uohytpvk_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  jfwyudrr_.Swap(&other->jfwyudrr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ejcyrnct_.Swap(&other->ejcyrnct_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  tgjuqnum_.Swap(&other->tgjuqnum_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata testData::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::testData* Arena::CreateMaybeMessage< ::testData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::testData >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
